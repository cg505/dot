(defun kotct/darwin-swap-command-option ()
  "This function swaps the Command and Option modifiers on MacOS.

This is intended to make the keyboard layout more friendly for
those used to a PC-like keyboard layout.  This makes C- and M-
more spread apart and makes the keyboard more ergonomic.

Because it uses the `mac-command-modifier' and
`mac-option-modifier' builtins, it does not affect other systems
built without compatibility for these two variables."
  (progn
    (setf mac-command-modifier 'meta)
    (setf mac-option-modifier 'super)))

(defun kotct/darwin-load-path-from-shell ()
  "This function sets `exec-path' to the 'PATH' variable
generated by a shell.

In most sane environments, (i.e. Linux) the `exec-path' variable
is suitably close to or identical to the 'PATH' used in a
terminal.  On MacOS/Darwin environments, however, `exec-path' is
only the global value for the variable 'PATH'.

As such, access to things like Homebrew-installed packages is
restricted.  This function calls the shell and asks it to print
out the 'PATH' variable after it loads the `.profile'-related
stuff.  This also respects the user's shell decision."
  ;; Only run this once.  After you perform this step, TERM_PROGRAM is
  ;; set, and the path should already be okay.
  (if (not (getenv "TERM_PROGRAM"))
      ;; Ask the shell to print out its value for $PATH.
      (let ((path (shell-command-to-string "$SHELL -cl \"printf %s \\\"\\\$PATH\\\"\"")))
        ;; Set the PATH variable to this to match everything up.
        (setenv "PATH" path)
        ;; Split $PATH and store in `exec-path'.
        (setf exec-path (split-string (getenv "PATH") ":")))))

(if (eq system-type 'darwin)
    (progn
      (kotct/darwin-swap-command-option)
      (kotct/darwin-load-path-from-shell)))

(provide 'darwin)
