#!/usr/bin/env ruby

DOT_HOME = ENV['HOME'].freeze
DOT_SUDO = (`which sudo` || ENV['SUDO'] || `/usr/bin/sudo`).freeze
DOT_NULL = '/dev/null'.freeze

module Tty

  module_function

  def blue
    bold 34
  end

  def red
    bold 31
  end

  def reset
    escape 0
  end

  def bold(n = 39)
    escape "1;#{n}"
  end

  def underline
    escape "4;39"
  end

  def escape(n)
    "\033[#{n}m" if STDOUT.tty?
  end

end

# Drop sudo privileges (really just invalidate the timestamp)
# prior to exiting, if sudo had been used.
Kernel.system "#{DOT_SUDO} -n -v >#{DOT_NULL} 2>&1"
at_exit { Kernel.system "#{DOT_SUDO}", "-k" } unless $?.success?
